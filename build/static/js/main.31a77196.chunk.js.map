{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Controll.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/itemEditing.js","reducers/filterTable.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["LIST_ALL","SAVE_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","UPDATE_STATUS_TASK","DELETE_TASK","EDIT_TASK","FILTER_TABLE","SEARCH","SORT","openForm","type","types","closeForm","editTask","task","TaskForm","props","onCloseForm","componentWillReceiveProps","nextProps","itemEditing","setState","id","name","status","onClear","onChange","event","target","value","onSubmit","preventDefault","onSaveTask","state","this","isDisplayForm","className","onClick","Component","connect","dispatch","actions","onOpenForm","Search","onSearch","keyword","placeholder","action","Sort","sortBy","sortValue","onSort","by","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","sort","Controll","TaskItem","OnUpdateStatus","onUpdateStatus","onDelete","onDeleteTask","onEditTask","index","TaskList","checked","filter","filterName","filterStatus","onFilterTable","tasks","filterTable","toLowerCase","indexOf","a","b","elmTasks","map","onUpdate","search","App","onToggleForm","taskEditing","findIndex","onShowForm","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","s4","Math","floor","random","toString","substring","randomID","result","forEach","data","JSON","parse","localStorage","getItem","initialState","myReducer","push","setItem","stringify","splice","parseInt","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31a77196.chunk.js","sourcesContent":["export const LIST_ALL=\"LIST_ALL\";\nexport const SAVE_TASK=\"SAVE_TASK\";\nexport const TOGGLE_FORM=\"TOGGLE_FORM\";\nexport const CLOSE_FORM=\"CLOSE_FORM\";\nexport const OPEN_FORM=\"OPEN_FORM\";\nexport const UPDATE_STATUS_TASK=\"UPDATE_STATUS_TASK\";\nexport const DELETE_TASK='DELETE_TASK';\nexport const EDIT_TASK='EDIT_TASK';\nexport const FILTER_TABLE='FILTER_TABLE';\nexport const SEARCH=\"SEARCH\";\nexport const SORT=\"SORT\"","import * as types from './../constants/ActionTypes';\n\nexport const listAll=()=> {\n    return {\n        type: types.LIST_ALL,\n    }\n}\n\nexport const saveTask=(task)=> {\n    return {\n        type: types.SAVE_TASK,\n        task // task:task\n    }\n}\n\nexport const toggleForm=()=> {\n    return {\n        type: types.TOGGLE_FORM,\n    }\n}\n\nexport const openForm=()=> {\n    return {\n        type: types.OPEN_FORM,\n    }\n}\n\nexport const closeForm=()=> {\n    return {\n        type: types.CLOSE_FORM,\n    }\n}\n\nexport const updateStatus=(id)=> {\n    return {\n        type: types.UPDATE_STATUS_TASK,\n        id //id:id\n    }\n}\n\nexport const deleteTask=(id)=>{\n    return {\n        type: types.DELETE_TASK,\n        id //id:id\n    }\n}\nexport const editTask=(task)=>{\n    return{\n        type:types.EDIT_TASK,\n        task // task:task\n    }\n}\n\nexport const filterTask=(filter)=>{\n    return {\n        type:types.FILTER_TABLE,\n        filter // filter : filter -> filterName, filterStatus\n    }\n}\n\nexport const searchTask=(keyword)=>{\n    return {\n        type:types.SEARCH,\n        keyword // keyword:keyword\n    }\n}\n\nexport const sortTask=(sort)=>{\n    return {\n        type:types.SORT,\n        sort // sort:sort->sortBy,sortValue\n    }\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from './../actions/index'\n\nclass TaskForm extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n\n    };\n  }\n\n  onCloseForm=()=>{\n    this.props.onCloseForm();\n  }\n  \n  componentWillMount(){\n    if(this.props.itemEditing && this.props.itemEditing.id !==null){\n      this.setState({\n        id:this.props.itemEditing.id,\n        name:this.props.itemEditing.name,\n        status:this.props.itemEditing.status\n      })\n    } else {\n      this.onClear();\n    }\n  }\n\n  componentWillReceiveProps=(nextProps)=>{\n    if(nextProps && nextProps.itemEditing){\n      this.setState({\n        id:nextProps.itemEditing.id,\n        name:nextProps.itemEditing.name,\n        status:nextProps.itemEditing.status\n      })\n    } else {\n        this.onClear();\n    }\n  } \n\n  onChange=(event)=>{\n    var target=event.target;\n    var name=target.name;\n    var value=target.value;\n    if(name==='status'){ \n      value = target.value ===  'true' ? true : false;\n    }\n    this.setState({\n      [name]: value\n    })\n  }\n\n  onSubmit=(event)=>{\n    event.preventDefault();\n    this.props.onSaveTask(this.state);\n    // Cancel & Close Form\n    this.onClear();\n    this.onCloseForm();\n  }\n\n  onClear=()=>{\n    this.setState({\n      id:'',\n      name:'',\n      status: false\n    })\n  }\n\n  render() {\n    if(!this.props.isDisplayForm) return null;\n\n    return (\n        <div className=\"panel panel-warning\">\n        <div className=\"panel-heading\">\n          <h3 className=\"panel-title\">{!this.state.id ? 'Cap nhat cong viec' : 'Them cong viec'}\n          <span className=\"fa fa-times-circle text-right close\" onClick={this.onCloseForm}\n          ></span></h3>\n        </div> \n        <div className=\"panel-body\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label>Tên :</label>\n              <input \n                  type=\"text\" \n                  className=\"form-control\" \n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.onChange}\n              />\n            </div>\n            <label>Trạng Thái :</label>\n            <select \n            className=\"form-control\" \n            name='status'\n            value={this.state.status}\n            onChange={this.onChange}\n            >\n              <option value={true} >Kích Hoạt</option>\n              <option value={false}>Ẩn</option>\n            </select>\n            <br />\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-warning\">\n              <span className=\"fa fa-plus mr-5\"></span>Lưu Lại</button>&nbsp;\n              <button type=\"button\" className=\"btn btn-danger\" onClick={this.onClear}>\n              <span className=\"fa fa-times-circle\"></span>Hủy Bỏ</button>\n            </div>\n          </form>\n        </div>\n      </div>\n          );\n  };\n};\n\nconst mapStateToProps=(state)=>{\n    return{\n        isDisplayForm:state.isDisplayForm,\n        itemEditing: state.itemEditing\n    }\n}\n\nconst mapDispatchToProps=(dispatch, props)=>{\n  return {\n    onSaveTask:(task)=>{\n        dispatch(actions.saveTask(task));\n      },\n      onCloseForm: ()=>{\n        dispatch(actions.closeForm())\n      },\n      onOpenForm: ()=>{\n        dispatch(actions.openForm())\n      }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps )(TaskForm);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from './../actions/index'\n\nclass Search extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      keyword:''\n    }\n  }\n\n  onChange=(event)=>{\n    var target=event.target;\n    var name = target.name;\n    var value =target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  onSearch=()=>{\n    this.props.onSearch(this.state.keyword);\n  }\n\n  render() {\n    var {keyword}=this.state;\n\n    return (\n<div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                      <div className=\"input-group\">\n                        <input type=\"text\" className=\"form-control\" \n                        name=\"keyword\"\n                        value={keyword}\n                        onChange={this.onChange}\n                        placeholder=\"Nhập từ khóa...\" />\n                        <span className=\"input-group-btn\">\n                          <button className=\"btn btn-primary\" type=\"button\"\n                          onClick={this.onSearch}>\n                            <span className=\"fa fa-search mr-5\" />Tìm\n                          </button>\n                        </span>\n                      </div>\n                    </div>\n          );\n  };\n};\n\nconst mapStateToProps = state =>{\n  return {\n\n  }\n};\n\nconst mapDispatchToProps = (dispatch,action)=>{\n  return {\n    onSearch:(keyword)=>{\n      dispatch(actions.searchTask(keyword))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from './../actions/index'\n\nclass Sort extends Component{\n\n  onClick=(sortBy, sortValue)=>{\n    this.props.onSort({\n      by:sortBy,\n      value:sortValue\n    })\n  } \n\n  render() {\n\n    return (\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                      <div className=\"dropdown\">\n                        <button className=\"btn btn-primary dropdown-toggle\" \n                        type=\"button\" id=\"dropdownMenu1\" \n                        data-toggle=\"dropdown\" \n                        aria-haspopup=\"true\" \n                        aria-expanded=\"true\">\n                          Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\n                        </button>\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                          <li onClick={()=>this.onClick('name', 1)}>\n                            <a role=\"button\"\n                            className={(this.props.sort.by ==='name' && this.props.sort.value===1) ? 'sort_selected' : ''}>\n                              <span className=\"fa fa-sort-alpha-asc pr-5\">\n                                Tên A-Z\n                              </span>\n                            </a>\n                          </li>\n                          <li onClick={()=>this.onClick('name', -1)}>\n                          <a role=\"button\"\n                            className={(this.props.sort.by ==='name' && this.props.sort.value===-1) ? 'sort_selected' : ''}>\n                              <span className=\"fa fa-sort-alpha-desc pr-5\">\n                                Tên Z-A\n                              </span>\n                            </a>\n                          </li>\n                          <li role=\"separator\" className=\"divider\" />\n                          <li onClick={()=>this.onClick('status', 1)}><a role=\"button\"\n                            className={(this.props.sort.by ==='status' && this.props.sort.value===1) ? 'sort_selected' : ''}>Trạng Thái Kích Hoạt</a></li>\n                          <li onClick={()=>this.onClick('status', -1)}><a role=\"button\"\n                            className={(this.props.sort.by ==='status' && this.props.sort.value===-1) ? 'sort_selected' : ''}>Trạng Thái Ẩn</a></li>\n                        </ul>\n                      </div>\n                    </div>\n          );\n  };\n};\n\nconst mapStateToProps = state =>{\n  return {\n    sort:state.sort\n  }\n};\n\nconst mapDispatchToProps = (dispatch,action)=>{\n  return {\n    onSort:(sort)=>{ // sortBy, sortValue\n        dispatch(actions.sortTask(sort));\n      }\n  }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Sort);\n","import React, { Component } from 'react';\nimport Search from \"./Search\";\nimport Sort from \"./Sort\";\n\nclass Controll extends Component{\n\n  render() {\n\n    return (\n        <div className=\"row mt-15\">\n                    <Search />\n                    {/**Sort */}\n                    <Sort />\n        </div>\n          );\n  };\n};\n\nexport default Controll;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from './../actions/index';\n\nclass TaskItem extends Component{\n\n  OnUpdateStatus=()=>{\n    this.props.onUpdateStatus(this.props.task.id);\n  }\n  \n  onDelete=()=>{\n    this.props.onDeleteTask(this.props.task.id);\n    this.props.onCloseForm();\n  }\n\n  onEditTask=()=>{\n    \n    this.props.onOpenForm();\n    this.props.onEditTask(this.props.task);\n  }\n\n  render() {\n    var {task , index}=this.props;\n    return (\n\n        <tr>\n            <td>{index+1}</td>\n            <td>{task.name}</td>\n            <td className=\"text-center\">\n              <span className={task.status===true ? 'label label-danger' : 'label label-success'}\n                onClick={this.OnUpdateStatus}\n              >\n                {task.status===true ? 'Kích hoạt' : 'Ẩn'}\n              </span>\n            </td>\n            <td className=\"text-center\">\n              <button type=\"button\" className=\"btn btn-warning\" onClick={this.onEditTask} >\n                <span className=\"fa fa-pencil mr-5\" />Sửa\n              </button>\n              &nbsp;\n              <button type=\"button\" className=\"btn btn-danger\"\n              onClick={this.onDelete}>\n                <span className=\"fa fa-trash mr-5\" />Xóa\n              </button>\n            </td>\n          </tr>\n\n          );\n  };\n};\n\nconst mapStateToProps = state =>{\n  return{\n    \n  };\n};\n\nconst mapDispatchToProps =(dispatch,props)=>{\n  return{\n    onUpdateStatus: (id)=>{\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: (id)=>{\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: ()=>{\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: ()=>{\n      dispatch(actions.openForm());\n    },\n    onEditTask: (task)=>{\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskItem);\n\n","import React, { Component } from 'react';\nimport TaskItem from \"./TaskItem\";\nimport {connect} from 'react-redux';\nimport * as actions from './../actions/index';\n\nclass TaskList extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      filterName:'',\n      filterStatus:-1 //all :-1, active: 1; deactive:0 \n    }\n  }\n\n  onChange=(event)=>{\n    var target = event.target;\n    var name=target.name;\n    var value=target.type==='checkbox' ? target.checked : target.value;\n    var filter={\n      name: name==='filterName' ? value : this.state.filterName,\n      status: name==='filterStatus' ? value : this.state.filterStatus\n      \n    }\n    this.props.onFilterTable(filter)\n\n    this.setState({\n      [name] : value\n    });\n  }\n\n  render() {\n    var  {tasks,filterTable,keyword,sort}=this.props;\n    //filter on table\n    if(filterTable.name){\n      tasks=tasks.filter((task)=>{\n        return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1\n      });\n    }\n    tasks=tasks.filter((task)=>{\n      if(filterTable.status === -1){\n        return task;\n      } else {\n        return task.status===(filterTable.status ===1 ? true : false);\n      }\n    })\n\n    \n    tasks=tasks.filter((task)=>{\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\n      \n    })\n    \n\n    if(sort.by==='name'){\n      tasks.sort((a,b)=>{\n        if(a.name > b.name) return sort.value;\n        else if(a.name < b.name) return -sort.value;\n        else return 0;\n      })\n    }else {\n      tasks.sort((a,b)=>{\n        if(a.status >b.status) return -sort.value;\n        else if(a.status<b.status ) return sort.value;\n        else return 0;\n      })\n    }\n\n    var elmTasks=tasks.map((task,index)=>{\n      return <TaskItem key={task.id} index={index} task={task}\n      onUpdate={this.props.onUpdate}\n      />\n    })\n\n    return (\n\n      <table className=\"table table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">STT</th>\n            <th className=\"text-center\">Tên</th>\n            <th className=\"text-center\">Trạng Thái</th>\n            <th className=\"text-center\">Hành Động</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td />\n            <td>\n              <input type=\"text\" className=\"form-control\"\n              name=\"filterName\"\n              value={filterTable.name}\n              onChange={this.onChange} />\n            </td>\n            <td>\n              <select className=\"form-control\"\n                name=\"filterStatus\"\n                value={filterTable.status}\n                onChange={this.onChange}\n              >\n                <option value={-1}>Tất Cả</option>\n                <option value={0}>Ẩn</option>\n                <option value={1}>Kích Hoạt</option>\n              </select>\n            </td>\n            <td />\n          </tr>\n          {elmTasks}\n        </tbody>\n</table>  \n\n          );\n  };\n}; \n\nconst mapStateToProps = (state) =>{\n    return { \n      tasks: state.tasks,\n      filterTable:state.filterTable,\n      keyword:state.search,\n      sort: state.sort\n    }\n};\n\nconst mapDispatchToProps =(dispatch,props)=>{\n  return{\n    onFilterTable:(filter)=>{\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\nimport {connect } from \"react-redux\";\nimport * as actions from './actions/index';\n\nclass App extends Component{\n\n  onToggleForm=()=>{\n    var {itemEditing}=this.props;\n    if(itemEditing && itemEditing.id !==''){\n      this.props.onOpenForm();\n    } else {\n      this.props.onToggleForm();\n    }\n    this.props.onEditTask({\n      id:'',\n      name:'',\n      status:false\n    })\n  }\n\n  onUpdate=(id)=>{\n    var {tasks}=this.state;\n    var index =this.findIndex(id);\n    var taskEditing=tasks[index];\n    this.setState({\n      taskEditing: taskEditing\n    });\n    this.onShowForm();\n    console.log(taskEditing)\n  }\n\n  onShowForm=()=>{\n    this.setState({\n      isDisplayForm:true\n    })\n  }\n\n  render() {\n\n    var {isDisplayForm} = this.props;\n    \n    \n    return (\n            <div className=\"container\">\n              <div className=\"text-center\">\n                <h1>Quản Lý Công Việc</h1>\n                <hr />\n              </div>\n              <div className=\"row\">\n                <div className={isDisplayForm  ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                <TaskForm />\n                </div>\n                <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-primary\"\n                    onClick={this.onToggleForm} \n                    >\n                    <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n                  </button>\n                  {/*Search-sort*/}\n                  <Controll />\n                  {/**Search */}\n \n\n                  {/**List */}\n                  <div className=\"row mt-15\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <TaskList \n                    //onUpdate={this.onUpdate} \n                    />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n  };\n};\n\nconst mapStateToProps = state =>{\n  return{\n    isDisplayForm:state.isDisplayForm,\n    itemEditing:state.itemEditing\n  };\n};\n\nconst mapDispatchToProps =(dispatch,props)=>{\n  return{\n    onToggleForm: ()=>{\n      dispatch(actions.toggleForm())\n    },\n    onEditTask: (task)=>{\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: ()=>{\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport * as types from './../constants/ActionTypes';\n\nvar s4=()=>{\n    return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\n  };\n\nvar randomID=()=>{\n    return s4()+s4()+'-'+s4()+'-'+s4()+'-'+s4()+'-'+s4()+s4()+s4();\n  };\n\nvar findIndex=(tasks,id)=>{\n    var result = -1;\n    tasks.forEach((task,index)=>{\n      if(task.id===id){\n          result=index;    \n        }\n    });\n    return result;\n\n  }\n\nvar data= JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.LIST_ALL:\n            return state;\n        case types.SAVE_TASK:\n            var task={\n                id:action.task.id,\n                name: action.task.name,\n                status: action.task.status === true ? true : false\n            };\n            if(!task.id){\n                task.id=randomID();\n                state.push(task);\n            } else {\n                index=findIndex(state,task.id);\n                state[index]=task;\n            }\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            var id = action.id\n            var index =findIndex(state, id);\n            state[index]={\n                ...state[index],\n                status:!state[index].status\n            }\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n        case types.DELETE_TASK:\n            var id=action.id;\n            var index = findIndex(state,id);\n            state.splice(index,1);\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return[...state];\n        default:\n            return state;\n    }\n};\n\nexport default myReducer;","\nimport * as types from './../constants/ActionTypes';\n\nvar initialState = false;\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.TOGGLE_FORM:\n            return !state;\n        case types.OPEN_FORM:\n            return true;\n        case types.CLOSE_FORM:\n            return false;\n        default: return state;\n    }\n    return state;\n}\n\nexport default myReducer;","\nimport * as types from './../constants/ActionTypes';\n\nvar initialState = {\n    id:'',\n    name:'',\n    status:false\n};\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.EDIT_TASK:\n            return action.task\n        default: return state;\n    }\n    return state;\n}\n\nexport default myReducer;","\nimport * as types from './../constants/ActionTypes';\n\nvar initialState = {\n    name:'',\n    status:-1\n};\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.FILTER_TABLE:\n            \n            return {\n                name: action.filter.name,\n                status:parseInt(action.filter.status)\n            }\n        default: return state;\n    }\n    return state;\n}\n\nexport default myReducer;","\nimport * as types from './../constants/ActionTypes';\n\nvar initialState = '';\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.SEARCH:\n           \n            return action.keyword;\n        default: return state;\n    }\n    return state;\n}\n\nexport default myReducer;","\nimport * as types from './../constants/ActionTypes';\n\nvar initialState = {\n    by:'name',\n    value:1 // 1: Tang, -1 giam\n};\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.SORT:\n            return {\n                by: action.sort.by,\n                value: action.sort.value\n            }\n        default: return state;\n    }\n    return state;\n}\n\nexport default myReducer;","import { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport isDisplayForm from './isDisplayForm';\nimport itemEditing from './itemEditing';\nimport filterTable from './filterTable';\nimport search from './search';\nimport sort from './sort'\n\n\nconst myReducer = combineReducers({\n    tasks:tasks, // tasks -- ES6\n    isDisplayForm:isDisplayForm,\n    itemEditing:itemEditing,\n    filterTable:filterTable,\n    search:search,\n    sort:sort\n    \n\n});\n\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// create store\nimport { createStore } from 'redux';\nimport myReducer from  './reducers/index';\nimport {Provider} from 'react-redux';\nconst store = createStore(myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}