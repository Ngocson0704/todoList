{"ast":null,"code":"var _jsxFileName = \"/media/ngocson/01D61D82FE1A2A90/Daily/trainning reactjs/lesson10 pj2/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onSubmit = data => {\n      var {\n        tasks\n      } = this.state; //var tasks=this.state.tasks\n\n      data.id = this.generateID();\n      tasks.push(data);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      console.log(id);\n    };\n\n    this.state = {\n      tasks: [],\n      // id: unique, name, status\n      isDisplayForm: false\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm\n    } = this.state; // var tasks=this.state.tasks\n\n    var elmTaskForm = isDisplayForm ? /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this) : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n          children: elmTaskForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToggleForm,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-plus mr-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger ml-15\",\n            onClick: this.onGenerateData,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-plus mr-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), \"GenerateData\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Controll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-15\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n              children: /*#__PURE__*/_jsxDEV(TaskList, {\n                tasks: tasks,\n                onUpdateStatus: this.onUpdateStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/media/ngocson/01D61D82FE1A2A90/Daily/trainning reactjs/lesson10 pj2/src/App.js"],"names":["React","Component","TaskForm","Controll","TaskList","App","constructor","props","onToggleForm","setState","isDisplayForm","state","onCloseForm","onSubmit","data","tasks","id","generateID","push","localStorage","setItem","JSON","stringify","onUpdateStatus","console","log","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elmTaskForm","onGenerateData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      tasks:[],  // id: unique, name, status\n      isDisplayForm: false\n    }\n  }\n\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks=JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks:tasks\n      })\n    }\n  }\n\n\n\n  onToggleForm=()=>{\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm\n    })\n  }\n\n  s4(){\n    return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\n  };\n\n  generateID(){\n    return this.s4()+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+this.s4()+this.s4();\n  };\n  \n  onCloseForm=()=>{\n    this.setState({\n      isDisplayForm: false\n    })\n  }\n\n  onSubmit=(data)=>{\n    var {tasks}=this.state //var tasks=this.state.tasks\n    data.id=this.generateID()\n    tasks.push(data);\n    this.setState({\n      tasks:tasks\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\n  onUpdateStatus=(id)=>{\n    console.log(id);\n  }\n\n  render() {\n    var {tasks , isDisplayForm}=this.state; // var tasks=this.state.tasks\n    var elmTaskForm = isDisplayForm ? \n      <TaskForm  onSubmit={this.onSubmit}  onCloseForm={this.onCloseForm} /> : '';\n\n    return (\n            <div className=\"container\">\n              <div className=\"text-center\">\n                <h1>Quản Lý Công Việc</h1>\n                <hr />\n              </div>\n              <div className=\"row\">\n                <div className={isDisplayForm  ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                  {elmTaskForm}\n                </div>\n                <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-primary\"\n                    onClick={this.onToggleForm} \n                    >\n                    <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n                  </button>\n                  <button type=\"button\" className=\"btn btn-danger ml-15\"\n                  onClick={this.onGenerateData}>\n                    <span className=\"fa fa-plus mr-5\" />GenerateData\n                  </button>\n                  {/*Search-sort*/}\n                  <Controll />\n                  {/**Search */}\n \n\n                  {/**List */}\n                  <div className=\"row mt-15\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <TaskList tasks={tasks} onUpdateStatus={this.onUpdateStatus} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}