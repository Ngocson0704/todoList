{"ast":null,"code":"var _jsxFileName = \"/home/ngocson/Documents/Pj2 rd/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\nimport { connect } from \"react-redux\";\nimport * as actions from './actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilter = (filterName, filterStatus) => {\n      console.log(filterName, filterStatus);\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          name: filterName,\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onToggleForm = () => {\n      var {\n        itemEditing\n      } = this,\n          props;\n\n      if (itemEditing && itemEditing.id != '') {} else {\n        this.props.onToggleForm();\n      }\n      /*     if(this.state.isDisplayForm && this.state.taskEditing!==null){\n            this.setState({\n              isDisplayForm: true,\n              taskEditing: null\n            })\n          } else {\n            this.setState({\n              isDisplayForm: !this.state.isDisplayForm,\n              taskEditing: null\n            })\n          }\n           */\n\n\n      this.props.onEditTask({\n        id: '',\n        name: '',\n        status: false\n      });\n    };\n\n    this.findIndex = id => {\n      var {\n        tasks\n      } = this.state;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onUpdate = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n      var taskEditing = tasks[index];\n      this.setState({\n        taskEditing: taskEditing\n      });\n      this.onShowForm();\n      console.log(taskEditing);\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.state = {\n      taskEditing: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n  }\n\n  render() {\n    var {\n      sortBy,\n      sortValue,\n      filter // keyword\n\n    } = this.state; // var tasks=this.state.tasks\n\n    /* if(filter){\n      if(filter.name){\n        tasks=tasks.filter((task)=>{\n          return task.name.toLowerCase().indexOf(filter.name) !== -1\n        \n        })\n      }\n      tasks=tasks.filter((task)=>{\n        if(filter.status===-1){\n          return task;\n        } else {\n          return task.status ===(filter.status === 1 ? true : false)\n        }\n      })\n    }\n     if(keyword){\n      tasks=tasks.filter((task)=>{\n        return task.name.toLowerCase().indexOf(keyword) !== -1\n      \n      })\n    }\n     if(sortBy==='name'){\n      tasks.sort((a,b)=>{\n        if(a.name >b.name) return sortValue;\n        else if(a.name<b.name) return -sortValue;\n        else return 0;\n      })\n    }else {\n      tasks.sort((a,b)=>{\n        if(a.status >b.status) return -sortValue;\n        else if(a.status<b.status ) return sortValue;\n        else return 0;\n      })\n    } */\n\n    var {\n      isDisplayForm\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n          children: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToggleForm,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-plus mr-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger ml-15\",\n            onClick: this.onGenerateData,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-plus mr-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), \"GenerateData\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Controll, {\n            onSearch: this.onSearch,\n            onSort: this.onSort,\n            sortBy: sortBy,\n            sortValue: sortValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-15\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n              children: /*#__PURE__*/_jsxDEV(TaskList, {\n                onUpdate: this.onUpdate,\n                onFilter: this.onFilter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onEditTask: task => {\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/ngocson/Documents/Pj2 rd/src/App.js"],"names":["React","Component","TaskForm","Controll","TaskList","connect","actions","App","constructor","props","onFilter","filterName","filterStatus","console","log","parseInt","setState","filter","name","status","onToggleForm","itemEditing","id","onEditTask","findIndex","tasks","state","result","forEach","task","index","onUpdate","taskEditing","onShowForm","isDisplayForm","onSearch","keyword","onSort","sortBy","sortValue","render","onGenerateData","mapStateToProps","mapDispatchToProps","dispatch","toggleForm","editTask"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA2B;AACzBO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAgBlBC,QAhBkB,GAgBT,CAACC,UAAD,EAAaC,YAAb,KAA4B;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAAwBC,YAAxB;AACAA,MAAAA,YAAY,GAACG,QAAQ,CAACH,YAAD,EAAc,EAAd,CAArB;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAC;AACLC,UAAAA,IAAI,EAAEP,UADD;AAELQ,UAAAA,MAAM,EAACP;AAFF;AADK,OAAd;AAOD,KA1BiB;;AAAA,SA4BlBQ,YA5BkB,GA4BL,MAAI;AACf,UAAI;AAACC,QAAAA;AAAD,UAAc,IAAlB;AAAA,UAAuBZ,KAAvB;;AACA,UAAGY,WAAW,IAAIA,WAAW,CAACC,EAAZ,IAAiB,EAAnC,EAAsC,CAErC,CAFD,MAEO;AACL,aAAKb,KAAL,CAAWW,YAAX;AACD;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,WAAKX,KAAL,CAAWc,UAAX,CAAsB;AACpBD,QAAAA,EAAE,EAAC,EADiB;AAEpBJ,QAAAA,IAAI,EAAC,EAFe;AAGpBC,QAAAA,MAAM,EAAC;AAHa,OAAtB;AAKD,KArDiB;;AAAA,SAyElBK,SAzEkB,GAyEPF,EAAD,IAAM;AACd,UAAI;AAACG,QAAAA;AAAD,UAAQ,KAAKC,KAAjB;AACA,UAAIC,MAAM,GAAG,CAAC,CAAd;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC1B,YAAGD,IAAI,CAACP,EAAL,KAAUA,EAAb,EAAgB;AACZK,UAAAA,MAAM,GAACG,KAAP;AACD;AACJ,OAJD;AAKA,aAAOH,MAAP;AAED,KAnFiB;;AAAA,SAsFlBI,QAtFkB,GAsFRT,EAAD,IAAM;AACb,UAAI;AAACG,QAAAA;AAAD,UAAQ,KAAKC,KAAjB;AACA,UAAII,KAAK,GAAE,KAAKN,SAAL,CAAeF,EAAf,CAAX;AACA,UAAIU,WAAW,GAACP,KAAK,CAACK,KAAD,CAArB;AACA,WAAKd,QAAL,CAAc;AACZgB,QAAAA,WAAW,EAAEA;AADD,OAAd;AAGA,WAAKC,UAAL;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,WAAZ;AACD,KA/FiB;;AAAA,SAiGlBC,UAjGkB,GAiGP,MAAI;AACb,WAAKjB,QAAL,CAAc;AACZkB,QAAAA,aAAa,EAAC;AADF,OAAd;AAGD,KArGiB;;AAAA,SAuGlBC,QAvGkB,GAuGRC,OAAD,IAAW;AAClB,WAAKpB,QAAL,CAAc;AACZoB,QAAAA,OAAO,EAACA;AADI,OAAd;AAGD,KA3GiB;;AAAA,SA6GlBC,MA7GkB,GA6GX,CAACC,MAAD,EAASC,SAAT,KAAqB;AAC1B,WAAKvB,QAAL,CAAc;AACZsB,QAAAA,MAAM,EAACA,MADK;AAEZC,QAAAA,SAAS,EAACA;AAFE,OAAd;AAID,KAlHiB;;AAEhB,SAAKb,KAAL,GAAW;AACTM,MAAAA,WAAW,EAAC,IADH;AAETf,MAAAA,MAAM,EAAC;AACLC,QAAAA,IAAI,EAAC,EADA;AAELC,QAAAA,MAAM,EAAC,CAAC;AAFH,OAFE;AAMTiB,MAAAA,OAAO,EAAE,EANA;AAOTE,MAAAA,MAAM,EAAE,MAPC;AAQTC,MAAAA,SAAS,EAAC;AARD,KAAX;AAYD;;AAsGDC,EAAAA,MAAM,GAAG;AACP,QAAI;AACFF,MAAAA,MADE;AAEFC,MAAAA,SAFE;AAGFtB,MAAAA,MAHE,CAIF;;AAJE,QAKF,KAAKS,KALP,CADO,CAMO;;AACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI,QAAI;AAACQ,MAAAA;AAAD,QAAkB,KAAKzB,KAA3B;AAGA,wBACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEyB,aAAa,GAAI,qCAAJ,GAA4C,EAAzE;AAAA,iCACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAEA,aAAa,GAAG,qCAAH,GAA2C,yCAAxE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,OAAO,EAAE,KAAKd,YAHhB;AAAA,oCAKE;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,sBAAhC;AACA,YAAA,OAAO,EAAE,KAAKqB,cADd;AAAA,oCAEE;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAaE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAE,KAAKN,QAAzB;AAAmC,YAAA,MAAM,EAAE,KAAKE,MAAhD;AAAwD,YAAA,MAAM,EAAEC,MAAhE;AAAwE,YAAA,SAAS,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAbF,eAkBE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,yCAAf;AAAA,qCACA,QAAC,QAAD;AACA,gBAAA,QAAQ,EAAE,KAAKR,QADf;AAEC,gBAAA,QAAQ,EAAE,KAAKrB;AAFhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAwCD;;AA3MwB;;AA4M1B;;AAED,MAAMgC,eAAe,GAAGhB,KAAK,IAAG;AAC9B,SAAM;AACJQ,IAAAA,aAAa,EAACR,KAAK,CAACQ,aADhB;AAEJb,IAAAA,WAAW,EAACK,KAAK,CAACL;AAFd,GAAN;AAID,CALD;;AAOA,MAAMsB,kBAAkB,GAAE,CAACC,QAAD,EAAUnC,KAAV,KAAkB;AAC1C,SAAM;AACJW,IAAAA,YAAY,EAAE,MAAI;AAChBwB,MAAAA,QAAQ,CAACtC,OAAO,CAACuC,UAAR,EAAD,CAAR;AACD,KAHG;AAIJtB,IAAAA,UAAU,EAAGM,IAAD,IAAQ;AAClBe,MAAAA,QAAQ,CAACtC,OAAO,CAACwC,QAAR,CAAiBjB,IAAjB,CAAD,CAAR;AACD;AANG,GAAN;AAQD,CATD;;AAWA,eAAexB,OAAO,CAACqC,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CpC,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\nimport {connect } from \"react-redux\";\nimport * as actions from './actions/index';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={ \n      taskEditing:null,\n      filter:{\n        name:'',\n        status:-1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue:1\n    }\n\n\n  }\n\n  onFilter=(filterName, filterStatus)=>{\n    console.log(filterName, filterStatus)\n    filterStatus=parseInt(filterStatus,10)\n    this.setState({\n      filter:{\n        name: filterName,\n        status:filterStatus\n      }\n    })\n\n  }\n\n  onToggleForm=()=>{\n    var {itemEditing}=this,props;\n    if(itemEditing && itemEditing.id !=''){\n\n    } else {\n      this.props.onToggleForm();\n    }\n/*     if(this.state.isDisplayForm && this.state.taskEditing!==null){\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null\n      })\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null\n      })\n    }\n     */\n    \n    this.props.onEditTask({\n      id:'',\n      name:'',\n      status:false\n    })\n  }\n  \n\n/*   onSubmit=(data)=>{\n    var {tasks}=this.state //var tasks=this.state.tasks\n    if(data.id===''){\n      data.id=this.generateID();\n      tasks.push(data);\n    } else {\n      var index=this.findIndex(data.id); \n      tasks[index]=data;\n    }\n    this.setState({\n      tasks:tasks,\n      taskEditing:null\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n} */\n\n\n  findIndex=(id)=>{\n    var {tasks}=this.state;\n    var result = -1;\n    tasks.forEach((task,index)=>{\n      if(task.id===id){\n          result=index;    \n        }\n    });\n    return result;\n\n  }\n\n\n  onUpdate=(id)=>{\n    var {tasks}=this.state;\n    var index =this.findIndex(id);\n    var taskEditing=tasks[index];\n    this.setState({\n      taskEditing: taskEditing\n    });\n    this.onShowForm();\n    console.log(taskEditing)\n  }\n\n  onShowForm=()=>{\n    this.setState({\n      isDisplayForm:true\n    })\n  }\n\n  onSearch=(keyword)=>{\n    this.setState({\n      keyword:keyword\n    })\n  }\n\n  onSort=(sortBy, sortValue)=>{\n    this.setState({\n      sortBy:sortBy,\n      sortValue:sortValue\n    })\n  }\n\n  render() {\n    var {\n      sortBy, \n      sortValue, \n      filter,\n      // keyword\n    }=this.state; // var tasks=this.state.tasks\n    /* if(filter){\n      if(filter.name){\n        tasks=tasks.filter((task)=>{\n          return task.name.toLowerCase().indexOf(filter.name) !== -1\n        \n        })\n      }\n      tasks=tasks.filter((task)=>{\n        if(filter.status===-1){\n          return task;\n        } else {\n          return task.status ===(filter.status === 1 ? true : false)\n        }\n      })\n    }\n\n    if(keyword){\n      tasks=tasks.filter((task)=>{\n        return task.name.toLowerCase().indexOf(keyword) !== -1\n      \n      })\n    }\n\n    if(sortBy==='name'){\n      tasks.sort((a,b)=>{\n        if(a.name >b.name) return sortValue;\n        else if(a.name<b.name) return -sortValue;\n        else return 0;\n      })\n    }else {\n      tasks.sort((a,b)=>{\n        if(a.status >b.status) return -sortValue;\n        else if(a.status<b.status ) return sortValue;\n        else return 0;\n      })\n    } */\n    var {isDisplayForm} = this.props;\n    \n    \n    return (\n            <div className=\"container\">\n              <div className=\"text-center\">\n                <h1>Quản Lý Công Việc</h1>\n                <hr />\n              </div>\n              <div className=\"row\">\n                <div className={isDisplayForm  ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                <TaskForm />\n                </div>\n                <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-primary\"\n                    onClick={this.onToggleForm} \n                    >\n                    <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n                  </button>\n                  <button type=\"button\" className=\"btn btn-danger ml-15\"\n                  onClick={this.onGenerateData}>\n                    <span className=\"fa fa-plus mr-5\" />GenerateData\n                  </button>\n                  {/*Search-sort*/}\n                  <Controll onSearch={this.onSearch} onSort={this.onSort} sortBy={sortBy} sortValue={sortValue}/>\n                  {/**Search */}\n \n\n                  {/**List */}\n                  <div className=\"row mt-15\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <TaskList \n                    onUpdate={this.onUpdate} \n                     onFilter={this.onFilter} \n                    />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n  };\n};\n\nconst mapStateToProps = state =>{\n  return{\n    isDisplayForm:state.isDisplayForm,\n    itemEditing:state.itemEditing\n  };\n};\n\nconst mapDispatchToProps =(dispatch,props)=>{\n  return{\n    onToggleForm: ()=>{\n      dispatch(actions.toggleForm())\n    },\n    onEditTask: (task)=>{\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}