{"ast":null,"code":"import * as types from './../constants/ActionTypes';\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nvar randomID = () => {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: randomID(),\n        name: action.task.name,\n        status: action.task.name === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', state);\n      return [...state];\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/ngocson/Documents/Pj2 rd/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","randomID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","push","setItem"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;;AAEA,IAAIC,EAAE,GAAC,MAAI;AACP,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAED,IAAI,CAACE,MAAL,EAAH,IAAkB,OAA7B,EAAsCC,QAAtC,CAA+C,EAA/C,EAAmDC,SAAnD,CAA6D,CAA7D,CAAP;AACD,CAFH;;AAIA,IAAIC,QAAQ,GAAC,MAAI;AACb,SAAON,EAAE,KAAGA,EAAE,EAAP,GAAU,GAAV,GAAcA,EAAE,EAAhB,GAAmB,GAAnB,GAAuBA,EAAE,EAAzB,GAA4B,GAA5B,GAAgCA,EAAE,EAAlC,GAAqC,GAArC,GAAyCA,EAAE,EAA3C,GAA8CA,EAAE,EAAhD,GAAmDA,EAAE,EAA5D;AACD,CAFH;;AAIA,IAAIO,IAAI,GAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAV;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAiC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAEd,QAAQ,EADF;AAEVe,QAAAA,IAAI,EAAEN,MAAM,CAACO,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAER,MAAM,CAACO,IAAP,CAAYD,IAAZ,KAAmB,MAAnB,GAA4B,IAA5B,GAAmC;AAHjC,OAAd;AAKAP,MAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX;AACAT,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACA;AAAS,aAAOA,KAAP;AAZjB;;AAcA,SAAOA,KAAP;AACH,CAhBD;;AAkBA,eAAeD,SAAf","sourcesContent":["\nimport * as types from './../constants/ActionTypes';\n\nvar s4=()=>{\n    return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\n  };\n\nvar randomID=()=>{\n    return s4()+s4()+'-'+s4()+'-'+s4()+'-'+s4()+'-'+s4()+s4()+s4();\n  };\n\nvar data= JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            var newTask = {\n                id: randomID(),\n                name: action.task.name,\n                status: action.task.name==='true' ? true : false\n            }\n            state.push(newTask);\n            localStorage.setItem('tasks', state);\n            return [...state]\n            default: return state;\n    }\n    return state;\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}