{"ast":null,"code":"var _jsxFileName = \"/media/ngocson/01D61D82FE1A2A90/Daily/trainning reactjs/lesson10 pj2/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onSubmit = data => {\n      var {\n        tasks\n      } = this.state; //var tasks=this.state.tasks\n\n      if (data.id === '') {\n        data.id = this.generateID();\n        tasks.push(data);\n      } else {\n        var index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        taskEditing: null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    this.findIndex = id => {\n      var {\n        tasks\n      } = this.state;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n      var taskEditing = tasks[index];\n      this.setState({\n        taskEditing: taskEditing\n      });\n      this.onShowForm();\n      console.log(taskEditing);\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      // id: unique, name, status\n      isDisplayForm: false,\n      taskEditing: null\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditing\n    } = this.state; // var tasks=this.state.tasks\n\n    var elmTaskForm = isDisplayForm ? /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      task: taskEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this) : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n          children: elmTaskForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToggleForm,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-plus mr-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger ml-15\",\n            onClick: this.onGenerateData,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-plus mr-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this), \"GenerateData\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Controll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-15\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n              children: /*#__PURE__*/_jsxDEV(TaskList, {\n                tasks: tasks,\n                onUpdateStatus: this.onUpdateStatus,\n                onDelete: this.onDelete,\n                onUpdate: this.onUpdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/media/ngocson/01D61D82FE1A2A90/Daily/trainning reactjs/lesson10 pj2/src/App.js"],"names":["React","Component","TaskForm","Controll","TaskList","App","constructor","props","onToggleForm","setState","isDisplayForm","state","onCloseForm","onSubmit","data","tasks","id","generateID","push","index","findIndex","taskEditing","localStorage","setItem","JSON","stringify","onUpdateStatus","status","result","forEach","task","onDelete","splice","onUpdate","onShowForm","console","log","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elmTaskForm","onGenerateData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controll from \"./components/Controll\";\nimport TaskList from \"./components/TaskList\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      tasks:[],  // id: unique, name, status\n      isDisplayForm: false,\n      taskEditing:null\n    }\n  }\n\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks=JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks:tasks\n      })\n    }\n  }\n\n\n\n  onToggleForm=()=>{\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm\n    })\n  }\n\n  s4(){\n    return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\n  };\n\n  generateID(){\n    return this.s4()+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+this.s4()+this.s4();\n  };\n  \n  onCloseForm=()=>{\n    this.setState({\n      isDisplayForm: false\n\n    })\n  }\n\n  onSubmit=(data)=>{\n    var {tasks}=this.state //var tasks=this.state.tasks\n    if(data.id===''){\n      data.id=this.generateID();\n      tasks.push(data);\n    } else {\n      var index=this.findIndex(data.id); \n      tasks[index]=data;\n    }\n    this.setState({\n      tasks:tasks,\n      taskEditing:null\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\n  onUpdateStatus=(id)=>{\n    var {tasks}=this.state;\n    var index =this.findIndex(id);\n    if(index !== -1){\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }\n\n\n  findIndex=(id)=>{\n    var {tasks}=this.state;\n    var result = -1;\n    tasks.forEach((task,index)=>{\n      if(task.id===id){\n          result=index;    \n        }\n    });\n    return result;\n\n  }\n\n  onDelete=(id)=>{\n    var {tasks}=this.state;\n    var index =this.findIndex(id);\n    if(index !== -1){\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  }\n\n  onUpdate=(id)=>{\n    var {tasks}=this.state;\n    var index =this.findIndex(id);\n    var taskEditing=tasks[index];\n    this.setState({\n      taskEditing: taskEditing\n    });\n    this.onShowForm();\n    console.log(taskEditing)\n  }\n\n  onShowForm=()=>{\n    this.setState({\n      isDisplayForm:true\n    })\n  }\n\n  render() {\n    var {tasks , isDisplayForm , taskEditing}=this.state; // var tasks=this.state.tasks\n    var elmTaskForm = isDisplayForm ? \n      <TaskForm  onSubmit={this.onSubmit}  onCloseForm={this.onCloseForm} \n        task={taskEditing}\n      /> : '';\n\n    return (\n            <div className=\"container\">\n              <div className=\"text-center\">\n                <h1>Quản Lý Công Việc</h1>\n                <hr />\n              </div>\n              <div className=\"row\">\n                <div className={isDisplayForm  ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                  {elmTaskForm}\n                </div>\n                <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-primary\"\n                    onClick={this.onToggleForm} \n                    >\n                    <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n                  </button>\n                  <button type=\"button\" className=\"btn btn-danger ml-15\"\n                  onClick={this.onGenerateData}>\n                    <span className=\"fa fa-plus mr-5\" />GenerateData\n                  </button>\n                  {/*Search-sort*/}\n                  <Controll />\n                  {/**Search */}\n \n\n                  {/**List */}\n                  <div className=\"row mt-15\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <TaskList tasks={tasks} onUpdateStatus={this.onUpdateStatus} onDelete={this.onDelete}\n                    onUpdate={this.onUpdate} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}